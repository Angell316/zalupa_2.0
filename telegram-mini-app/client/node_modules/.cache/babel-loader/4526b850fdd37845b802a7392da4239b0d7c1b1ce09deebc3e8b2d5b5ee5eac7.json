{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reko\\\\Desktop\\\\chtoto\\\\telegram-mini-app\\\\client\\\\src\\\\pages\\\\Drops\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Drops.scss';\nimport DropCard from '../../components/Drops/DropCard';\nimport Button from '../../components/common/Button';\nimport Loader from '../../components/common/Loader';\nimport { useGame } from '../../context/GameContext';\nimport BottomNav from '../../components/common/BottomNav';\nimport DropFilters from '../../components/Drops/DropFilters';\nimport { DROP_CONSTANTS } from '../../types/drop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropsPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    drops,\n    setDrops,\n    balance,\n    lostDrops24h,\n    totalDropsCount,\n    dropsIncomePerHour,\n    addDrop\n  } = useGame();\n  const [loading, setLoading] = useState(true);\n  const [selectedDrops, setSelectedDrops] = useState([]);\n  const [isMultiSelectMode, setIsMultiSelectMode] = useState(false);\n  const [sortBy, setSortBy] = useState('level_desc');\n\n  // Сбрасываем выбор при выходе из режима выбора\n  useEffect(() => {\n    if (!isMultiSelectMode) {\n      setSelectedDrops([]);\n    }\n  }, [isMultiSelectMode]);\n\n  // Имитация загрузки данных и добавление тестовых дропов если их нет\n  useEffect(() => {\n    // Добавляем тестовые дропы, если их нет\n    if (drops.length === 0) {\n      // Тестовые дропы\n      const testDrops = [{\n        id: '1',\n        userId: '123456789',\n        name: 'Алексей',\n        avatar: 'https://randomuser.me/api/portraits/men/32.jpg',\n        quality: 'common',\n        level: 1,\n        incomePerHour: 10,\n        incomeMultiplier: 1.0,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 10).toISOString(),\n        // 10 минут назад\n        createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 2).toISOString() // 2 дня назад\n      }, {\n        id: '2',\n        userId: '987654321',\n        name: 'Мария',\n        avatar: 'https://randomuser.me/api/portraits/women/43.jpg',\n        quality: 'rare',\n        level: 2,\n        incomePerHour: 25,\n        incomeMultiplier: 2.5,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 60 * 2).toISOString(),\n        // 2 часа назад\n        createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 5).toISOString() // 5 дней назад\n      }, {\n        id: '3',\n        userId: '555555555',\n        name: 'Иван',\n        avatar: 'https://randomuser.me/api/portraits/men/67.jpg',\n        quality: 'epic',\n        level: 3,\n        incomePerHour: 60,\n        incomeMultiplier: 6.0,\n        lastSeen: new Date().toISOString(),\n        // сейчас\n        createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 10).toISOString() // 10 дней назад\n      }, {\n        id: '4',\n        userId: '444444444',\n        name: 'Екатерина',\n        avatar: 'https://randomuser.me/api/portraits/women/22.jpg',\n        quality: 'legendary',\n        level: 4,\n        incomePerHour: 150,\n        incomeMultiplier: 15.0,\n        lastSeen: new Date(Date.now() - 1000 * 60 * 60 * 30).toISOString(),\n        // 30 часов назад (неактивный)\n        createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 15).toISOString() // 15 дней назад\n      }];\n\n      // Добавляем каждый дроп\n      testDrops.forEach(drop => {\n        addDrop(drop);\n      });\n    }\n\n    // Имитируем задержку загрузки\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 800);\n    return () => clearTimeout(timer);\n  }, [drops.length, addDrop]);\n\n  // Расчет стоимости улучшения для дропов\n  const calculateUpgradeCost = level => {\n    return Math.floor(DROP_CONSTANTS.BASE_UPGRADE_COST * Math.pow(DROP_CONSTANTS.UPGRADE_MULTIPLIER, level));\n  };\n\n  // Сортировка дропов в зависимости от выбранного критерия\n  const sortedDrops = [...drops].sort((a, b) => {\n    switch (sortBy) {\n      case 'level_desc':\n        return b.level - a.level;\n      case 'level_asc':\n        return a.level - b.level;\n      case 'income':\n        return b.incomePerHour - a.incomePerHour;\n      case 'upgrade_cost':\n        return calculateUpgradeCost(a.level) - calculateUpgradeCost(b.level);\n      default:\n        return 0;\n    }\n  });\n  const handleUpgrade = dropId => {\n    if (isMultiSelectMode) return; // Блокируем действия с дропами в режиме выбора\n\n    // В реальном приложении здесь будет API запрос\n    console.log(`Улучшение дропа ${dropId}`);\n  };\n  const handleRelease = dropId => {\n    if (isMultiSelectMode) return; // Блокируем действия с дропами в режиме выбора\n\n    // В реальном приложении здесь будет API запрос\n    console.log(`Отпускание дропа ${dropId}`);\n    setDrops(drops.filter(drop => drop.id !== dropId));\n    // Удаляем дроп из выбранных, если он был выбран\n    if (selectedDrops.includes(dropId)) {\n      setSelectedDrops(prevSelected => prevSelected.filter(id => id !== dropId));\n    }\n  };\n  const handleExtraPayment = dropId => {\n    if (isMultiSelectMode) return; // Блокируем действия с дропами в режиме выбора\n\n    // В реальном приложении здесь будет API запрос\n    console.log(`Доплата за дроп ${dropId}`);\n  };\n\n  // Новый обработчик для управления выбором дропов\n  const handleDropCardClick = (e, dropId) => {\n    // Только если мы в режиме выбора\n    if (!isMultiSelectMode) return;\n\n    // Проверяем, что клик был по обертке, а не по кнопкам внутри карточки\n    const target = e.target;\n    if (target.closest('.drop-card__action')) {\n      return; // Игнорируем клики по кнопкам\n    }\n\n    // Переключаем выбор\n    setSelectedDrops(prevSelected => {\n      if (prevSelected.includes(dropId)) {\n        return prevSelected.filter(id => id !== dropId);\n      } else {\n        return [...prevSelected, dropId];\n      }\n    });\n  };\n  const toggleMultiSelectMode = () => {\n    setIsMultiSelectMode(prevMode => !prevMode);\n  };\n  const handleBulkAction = action => {\n    if (selectedDrops.length === 0) return; // Предотвращаем действия, если ничего не выбрано\n\n    // В реальном приложении здесь будет API запрос\n    console.log(`Действие ${action} для дропов:`, selectedDrops);\n    if (action === 'release') {\n      setDrops(drops.filter(drop => !selectedDrops.includes(drop.id)));\n    }\n    setSelectedDrops([]);\n    setIsMultiSelectMode(false);\n  };\n  const selectAll = () => {\n    if (selectedDrops.length === drops.length) {\n      setSelectedDrops([]);\n    } else {\n      setSelectedDrops(drops.map(drop => drop.id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drops-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drops-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041C\\u043E\\u0438 \\u0414\\u0440\\u043E\\u043F\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance\",\n        children: [\"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Intl.NumberFormat('ru-RU').format(balance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 19\n        }, this), \" \\u20BD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drops-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0434\\u0440\\u043E\\u043F\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: totalDropsCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"\\u0414\\u043E\\u0445\\u043E\\u0434/\\u0447\\u0430\\u0441:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: [new Intl.NumberFormat('ru-RU').format(dropsIncomePerHour), \" \\u20BD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0445:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: drops.filter(drop => {\n            const lastSeen = new Date(drop.lastSeen);\n            const now = new Date();\n            return (now.getTime() - lastSeen.getTime()) / (1000 * 60 * 60) < 24;\n          }).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"\\u041F\\u043E\\u0442\\u0435\\u0440\\u044F\\u043D\\u043E \\u0437\\u0430 24\\u0447:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: lostDrops24h\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropFilters, {\n      sortBy: sortBy,\n      onChangeSortBy: setSortBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drops-controls\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleMultiSelectMode,\n        className: isMultiSelectMode ? 'active' : '',\n        children: isMultiSelectMode ? 'Отменить выбор' : 'Выбрать несколько'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), isMultiSelectMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multi-select-panel\",\n        children: [selectedDrops.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertical-bulk-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-count\",\n            children: [\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043E: \", selectedDrops.length, \" \\u0438\\u0437 \", drops.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleBulkAction('upgrade'),\n            className: \"bulk-action-button\",\n            children: \"\\u0423\\u043B\\u0443\\u0447\\u0448\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleBulkAction('payExtra'),\n            className: \"bulk-action-button\",\n            children: \"\\u0414\\u043E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u043C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleBulkAction('release'),\n            className: \"bulk-action-button release-button\",\n            children: \"\\u041E\\u0442\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-selection-message\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0440\\u043E\\u043F\\u044B \\u0434\\u043B\\u044F \\u043C\\u0430\\u0441\\u0441\\u043E\\u0432\\u044B\\u0445 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: selectAll,\n          className: \"select-all-button\",\n          children: selectedDrops.length === drops.length ? 'Снять выделение' : 'Выбрать все'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drops-loading\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drops-grid\",\n      children: sortedDrops.length > 0 ? sortedDrops.map(drop => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `drop-card-wrapper ${isMultiSelectMode ? 'selectable' : ''} ${selectedDrops.includes(drop.id) ? 'selected' : ''}`,\n        onClick: e => handleDropCardClick(e, drop.id),\n        children: /*#__PURE__*/_jsxDEV(DropCard, {\n          drop: drop // Временное решение для типизации\n          ,\n          onUpgrade: handleUpgrade,\n          onRelease: handleRelease,\n          onExtraPayment: handleExtraPayment,\n          isSelected: selectedDrops.includes(drop.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this)\n      }, drop.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-drops\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0434\\u0440\\u043E\\u043F\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/invite'),\n          children: \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0441\\u0438\\u0442\\u044C \\u0434\\u0440\\u0443\\u0437\\u0435\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BottomNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(DropsPage, \"M2z6hCA3EsAxE5VePXZEigQg88Y=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c = DropsPage;\nexport default DropsPage;\nvar _c;\n$RefreshReg$(_c, \"DropsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","DropCard","Button","Loader","useGame","BottomNav","DropFilters","DROP_CONSTANTS","jsxDEV","_jsxDEV","DropsPage","_s","navigate","drops","setDrops","balance","lostDrops24h","totalDropsCount","dropsIncomePerHour","addDrop","loading","setLoading","selectedDrops","setSelectedDrops","isMultiSelectMode","setIsMultiSelectMode","sortBy","setSortBy","length","testDrops","id","userId","name","avatar","quality","level","incomePerHour","incomeMultiplier","lastSeen","Date","now","toISOString","createdAt","forEach","drop","timer","setTimeout","clearTimeout","calculateUpgradeCost","Math","floor","BASE_UPGRADE_COST","pow","UPGRADE_MULTIPLIER","sortedDrops","sort","a","b","handleUpgrade","dropId","console","log","handleRelease","filter","includes","prevSelected","handleExtraPayment","handleDropCardClick","e","target","closest","toggleMultiSelectMode","prevMode","handleBulkAction","action","selectAll","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Intl","NumberFormat","format","getTime","onChangeSortBy","onClick","onUpgrade","onRelease","onExtraPayment","isSelected","_c","$RefreshReg$"],"sources":["C:/Users/Reko/Desktop/chtoto/telegram-mini-app/client/src/pages/Drops/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Drops.scss';\nimport DropCard from '../../components/Drops/DropCard';\nimport Button from '../../components/common/Button';\nimport Loader from '../../components/common/Loader';\nimport { useGame } from '../../context/GameContext';\nimport BottomNav from '../../components/common/BottomNav';\nimport DropFilters, { DropSortOption } from '../../components/Drops/DropFilters';\nimport { DROP_CONSTANTS } from '../../types/drop';\n\nconst DropsPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { drops, setDrops, balance, lostDrops24h, totalDropsCount, dropsIncomePerHour, addDrop } = useGame();\n  \n  const [loading, setLoading] = useState<boolean>(true);\n  const [selectedDrops, setSelectedDrops] = useState<string[]>([]);\n  const [isMultiSelectMode, setIsMultiSelectMode] = useState<boolean>(false);\n  const [sortBy, setSortBy] = useState<DropSortOption>('level_desc');\n\n  // Сбрасываем выбор при выходе из режима выбора\n  useEffect(() => {\n    if (!isMultiSelectMode) {\n      setSelectedDrops([]);\n    }\n  }, [isMultiSelectMode]);\n\n  // Имитация загрузки данных и добавление тестовых дропов если их нет\n  useEffect(() => {\n    // Добавляем тестовые дропы, если их нет\n    if (drops.length === 0) {\n      // Тестовые дропы\n      const testDrops = [\n        {\n          id: '1',\n          userId: '123456789',\n          name: 'Алексей',\n          avatar: 'https://randomuser.me/api/portraits/men/32.jpg',\n          quality: 'common',\n          level: 1,\n          incomePerHour: 10,\n          incomeMultiplier: 1.0,\n          lastSeen: new Date(Date.now() - 1000 * 60 * 10).toISOString(), // 10 минут назад\n          createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 2).toISOString() // 2 дня назад\n        },\n        {\n          id: '2',\n          userId: '987654321',\n          name: 'Мария',\n          avatar: 'https://randomuser.me/api/portraits/women/43.jpg',\n          quality: 'rare',\n          level: 2,\n          incomePerHour: 25,\n          incomeMultiplier: 2.5,\n          lastSeen: new Date(Date.now() - 1000 * 60 * 60 * 2).toISOString(), // 2 часа назад\n          createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 5).toISOString() // 5 дней назад\n        },\n        {\n          id: '3',\n          userId: '555555555',\n          name: 'Иван',\n          avatar: 'https://randomuser.me/api/portraits/men/67.jpg',\n          quality: 'epic',\n          level: 3,\n          incomePerHour: 60,\n          incomeMultiplier: 6.0,\n          lastSeen: new Date().toISOString(), // сейчас\n          createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 10).toISOString() // 10 дней назад\n        },\n        {\n          id: '4',\n          userId: '444444444',\n          name: 'Екатерина',\n          avatar: 'https://randomuser.me/api/portraits/women/22.jpg',\n          quality: 'legendary',\n          level: 4,\n          incomePerHour: 150,\n          incomeMultiplier: 15.0,\n          lastSeen: new Date(Date.now() - 1000 * 60 * 60 * 30).toISOString(), // 30 часов назад (неактивный)\n          createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 15).toISOString() // 15 дней назад\n        }\n      ];\n      \n      // Добавляем каждый дроп\n      testDrops.forEach(drop => {\n        addDrop(drop);\n      });\n    }\n\n    // Имитируем задержку загрузки\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 800);\n    \n    return () => clearTimeout(timer);\n  }, [drops.length, addDrop]);\n\n  // Расчет стоимости улучшения для дропов\n  const calculateUpgradeCost = (level: number): number => {\n    return Math.floor(DROP_CONSTANTS.BASE_UPGRADE_COST * \n      Math.pow(DROP_CONSTANTS.UPGRADE_MULTIPLIER, level));\n  };\n\n  // Сортировка дропов в зависимости от выбранного критерия\n  const sortedDrops = [...drops].sort((a, b) => {\n    switch(sortBy) {\n      case 'level_desc':\n        return b.level - a.level;\n      case 'level_asc':\n        return a.level - b.level;\n      case 'income':\n        return b.incomePerHour - a.incomePerHour;\n      case 'upgrade_cost':\n        return calculateUpgradeCost(a.level) - calculateUpgradeCost(b.level);\n      default:\n        return 0;\n    }\n  });\n\n  const handleUpgrade = (dropId: string) => {\n    if (isMultiSelectMode) return; // Блокируем действия с дропами в режиме выбора\n    \n    // В реальном приложении здесь будет API запрос\n    console.log(`Улучшение дропа ${dropId}`);\n  };\n\n  const handleRelease = (dropId: string) => {\n    if (isMultiSelectMode) return; // Блокируем действия с дропами в режиме выбора\n    \n    // В реальном приложении здесь будет API запрос\n    console.log(`Отпускание дропа ${dropId}`);\n    setDrops(drops.filter(drop => drop.id !== dropId));\n    // Удаляем дроп из выбранных, если он был выбран\n    if (selectedDrops.includes(dropId)) {\n      setSelectedDrops(prevSelected => prevSelected.filter(id => id !== dropId));\n    }\n  };\n\n  const handleExtraPayment = (dropId: string) => {\n    if (isMultiSelectMode) return; // Блокируем действия с дропами в режиме выбора\n    \n    // В реальном приложении здесь будет API запрос\n    console.log(`Доплата за дроп ${dropId}`);\n  };\n\n  // Новый обработчик для управления выбором дропов\n  const handleDropCardClick = (e: React.MouseEvent, dropId: string) => {\n    // Только если мы в режиме выбора\n    if (!isMultiSelectMode) return;\n    \n    // Проверяем, что клик был по обертке, а не по кнопкам внутри карточки\n    const target = e.target as HTMLElement;\n    if (target.closest('.drop-card__action')) {\n      return; // Игнорируем клики по кнопкам\n    }\n    \n    // Переключаем выбор\n    setSelectedDrops(prevSelected => {\n      if (prevSelected.includes(dropId)) {\n        return prevSelected.filter(id => id !== dropId);\n      } else {\n        return [...prevSelected, dropId];\n      }\n    });\n  };\n\n  const toggleMultiSelectMode = () => {\n    setIsMultiSelectMode(prevMode => !prevMode);\n  };\n\n  const handleBulkAction = (action: 'upgrade' | 'release' | 'payExtra') => {\n    if (selectedDrops.length === 0) return; // Предотвращаем действия, если ничего не выбрано\n    \n    // В реальном приложении здесь будет API запрос\n    console.log(`Действие ${action} для дропов:`, selectedDrops);\n    \n    if (action === 'release') {\n      setDrops(drops.filter(drop => !selectedDrops.includes(drop.id)));\n    }\n    \n    setSelectedDrops([]);\n    setIsMultiSelectMode(false);\n  };\n\n  const selectAll = () => {\n    if (selectedDrops.length === drops.length) {\n      setSelectedDrops([]);\n    } else {\n      setSelectedDrops(drops.map(drop => drop.id));\n    }\n  };\n\n  return (\n    <div className=\"drops-page\">\n      <div className=\"drops-header\">\n        <h1>Мои Дропы</h1>\n        <div className=\"balance\">\n          Баланс: <span>{new Intl.NumberFormat('ru-RU').format(balance)}</span> ₽\n        </div>\n      </div>\n\n      <div className=\"drops-stats\">\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Всего дропов:</span>\n          <span className=\"stat-value\">{totalDropsCount}</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Доход/час:</span>\n          <span className=\"stat-value\">{new Intl.NumberFormat('ru-RU').format(dropsIncomePerHour)} ₽</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Активных:</span>\n          <span className=\"stat-value\">\n            {drops.filter(drop => {\n              const lastSeen = new Date(drop.lastSeen);\n              const now = new Date();\n              return (now.getTime() - lastSeen.getTime()) / (1000 * 60 * 60) < 24;\n            }).length}\n          </span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Потеряно за 24ч:</span>\n          <span className=\"stat-value\">{lostDrops24h}</span>\n        </div>\n      </div>\n\n      <DropFilters \n        sortBy={sortBy}\n        onChangeSortBy={setSortBy}\n      />\n\n      <div className=\"drops-controls\">\n        <Button \n          onClick={toggleMultiSelectMode} \n          className={isMultiSelectMode ? 'active' : ''}\n        >\n          {isMultiSelectMode ? 'Отменить выбор' : 'Выбрать несколько'}\n        </Button>\n        \n        {isMultiSelectMode && (\n          <div className=\"multi-select-panel\">\n            {selectedDrops.length > 0 ? (\n              <div className=\"vertical-bulk-actions\">\n                <div className=\"selected-count\">Выбрано: {selectedDrops.length} из {drops.length}</div>\n                <Button onClick={() => handleBulkAction('upgrade')} className=\"bulk-action-button\">\n                  Улучшить выбранные\n                </Button>\n                <Button onClick={() => handleBulkAction('payExtra')} className=\"bulk-action-button\">\n                  Доплатить выбранным\n                </Button>\n                <Button onClick={() => handleBulkAction('release')} className=\"bulk-action-button release-button\">\n                  Отпустить выбранные\n                </Button>\n              </div>\n            ) : (\n              <div className=\"no-selection-message\">Выберите дропы для массовых действий</div>\n            )}\n            <Button onClick={selectAll} className=\"select-all-button\">\n              {selectedDrops.length === drops.length ? 'Снять выделение' : 'Выбрать все'}\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {loading ? (\n        <div className=\"drops-loading\">\n          <Loader />\n        </div>\n      ) : (\n        <div className=\"drops-grid\">\n          {sortedDrops.length > 0 ? (\n            sortedDrops.map(drop => (\n              <div \n                key={drop.id} \n                className={`drop-card-wrapper ${isMultiSelectMode ? 'selectable' : ''} ${selectedDrops.includes(drop.id) ? 'selected' : ''}`}\n                onClick={(e) => handleDropCardClick(e, drop.id)}\n              >\n                <DropCard\n                  drop={drop as any} // Временное решение для типизации\n                  onUpgrade={handleUpgrade}\n                  onRelease={handleRelease}\n                  onExtraPayment={handleExtraPayment}\n                  isSelected={selectedDrops.includes(drop.id)}\n                />\n              </div>\n            ))\n          ) : (\n            <div className=\"no-drops\">\n              <p>У вас пока нет дропов</p>\n              <Button onClick={() => navigate('/invite')}>Пригласить друзей</Button>\n            </div>\n          )}\n        </div>\n      )}\n      \n      <BottomNav />\n    </div>\n  );\n};\n\nexport default DropsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}