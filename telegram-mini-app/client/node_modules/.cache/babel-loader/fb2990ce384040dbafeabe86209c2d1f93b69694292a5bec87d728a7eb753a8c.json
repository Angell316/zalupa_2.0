{"ast":null,"code":"// Типы качества дропа\nexport let DropQuality = /*#__PURE__*/function (DropQuality) {\n  DropQuality[\"COMMON\"] = \"common\";\n  DropQuality[\"RARE\"] = \"rare\";\n  DropQuality[\"EPIC\"] = \"epic\";\n  DropQuality[\"LEGENDARY\"] = \"legendary\";\n  return DropQuality;\n}({});\n\n// Интерфейс для дропа\n\n// Интерфейс для статистики дропов\n\n// Интерфейс для обновления дропа\n\n// Интерфейс для информации об обновлении дропа\n\n// Интерфейс для страницы дропов\n\n// Интерфейс для карточки дропа\n\n// Константы для расчета стоимости улучшения и дохода\nexport const DROP_CONSTANTS = {\n  BASE_UPGRADE_COST: 100,\n  // Базовая стоимость улучшения\n  UPGRADE_MULTIPLIER: 1.5,\n  // Множитель увеличения стоимости с каждым уровнем\n  QUALITY_MULTIPLIERS: {\n    [DropQuality.COMMON]: 1,\n    [DropQuality.RARE]: 2,\n    [DropQuality.EPIC]: 4,\n    [DropQuality.LEGENDARY]: 8\n  },\n  LEVEL_INCOME_MULTIPLIER: 0.2 // Множитель увеличения дохода за каждый уровень (например, +20%)\n};","map":{"version":3,"names":["DropQuality","DROP_CONSTANTS","BASE_UPGRADE_COST","UPGRADE_MULTIPLIER","QUALITY_MULTIPLIERS","COMMON","RARE","EPIC","LEGENDARY","LEVEL_INCOME_MULTIPLIER"],"sources":["C:/Users/Reko/Desktop/chtoto/telegram-mini-app/client/src/types/drop.ts"],"sourcesContent":["// Типы качества дропа\r\nexport enum DropQuality {\r\n  COMMON = 'common',\r\n  RARE = 'rare',\r\n  EPIC = 'epic',\r\n  LEGENDARY = 'legendary'\r\n}\r\n\r\n// Интерфейс для дропа\r\nexport interface Drop {\r\n  id: string;\r\n  userId: string; // ID пользователя Telegram\r\n  name: string;\r\n  avatar: string | undefined;\r\n  quality: DropQuality | string;\r\n  level: number;\r\n  incomePerHour: number;\r\n  incomeMultiplier: number;\r\n  baseIncomePerHour?: number; // Базовый доход в час\r\n  lastSeen: Date | string;\r\n  createdAt: Date | string;\r\n  updatedAt?: Date | string;\r\n  isActive?: boolean; // Активен ли дроп (пользователь не ушел)\r\n}\r\n\r\n// Интерфейс для статистики дропов\r\nexport interface DropStatistics {\r\n  totalCount: number;\r\n  lostIn24h: number;\r\n  totalIncome: number;\r\n  qualityDistribution: {\r\n    [DropQuality.COMMON]: number;\r\n    [DropQuality.RARE]: number;\r\n    [DropQuality.EPIC]: number;\r\n    [DropQuality.LEGENDARY]: number;\r\n  };\r\n}\r\n\r\n// Интерфейс для обновления дропа\r\nexport interface DropUpgrade {\r\n  dropId: string;\r\n  newLevel: number;\r\n  cost: number;\r\n}\r\n\r\n// Интерфейс для информации об обновлении дропа\r\nexport interface DropUpgradeInfo {\r\n  currentLevel: number;\r\n  nextLevel: number;\r\n  currentIncome: number;\r\n  nextIncome: number;\r\n  upgradeCost: number;\r\n  successRate: number;\r\n}\r\n\r\n// Интерфейс для страницы дропов\r\nexport interface DropsPageProps {\r\n  // Дополнительные пропсы, если потребуются\r\n}\r\n\r\n// Интерфейс для карточки дропа\r\nexport interface DropCardProps {\r\n  drop: Drop;\r\n  onUpgrade: (id: string) => void;\r\n  onRelease: (id: string) => void;\r\n  onExtraPayment: (id: string) => void;\r\n  isSelected?: boolean;\r\n  isSelectable?: boolean;\r\n  onSelect?: (id: string) => void;\r\n}\r\n\r\n// Константы для расчета стоимости улучшения и дохода\r\nexport const DROP_CONSTANTS = {\r\n  BASE_UPGRADE_COST: 100, // Базовая стоимость улучшения\r\n  UPGRADE_MULTIPLIER: 1.5, // Множитель увеличения стоимости с каждым уровнем\r\n  QUALITY_MULTIPLIERS: {\r\n    [DropQuality.COMMON]: 1,\r\n    [DropQuality.RARE]: 2,\r\n    [DropQuality.EPIC]: 4,\r\n    [DropQuality.LEGENDARY]: 8\r\n  },\r\n  LEVEL_INCOME_MULTIPLIER: 0.2, // Множитель увеличения дохода за каждый уровень (например, +20%)\r\n}; "],"mappings":"AAAA;AACA,WAAYA,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;;AAOvB;;AAiBA;;AAaA;;AAOA;;AAUA;;AAKA;;AAWA;AACA,OAAO,MAAMC,cAAc,GAAG;EAC5BC,iBAAiB,EAAE,GAAG;EAAE;EACxBC,kBAAkB,EAAE,GAAG;EAAE;EACzBC,mBAAmB,EAAE;IACnB,CAACJ,WAAW,CAACK,MAAM,GAAG,CAAC;IACvB,CAACL,WAAW,CAACM,IAAI,GAAG,CAAC;IACrB,CAACN,WAAW,CAACO,IAAI,GAAG,CAAC;IACrB,CAACP,WAAW,CAACQ,SAAS,GAAG;EAC3B,CAAC;EACDC,uBAAuB,EAAE,GAAG,CAAE;AAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}