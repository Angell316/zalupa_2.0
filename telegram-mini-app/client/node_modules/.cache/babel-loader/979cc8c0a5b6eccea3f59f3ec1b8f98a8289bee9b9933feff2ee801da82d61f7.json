{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reko\\\\Desktop\\\\chtoto\\\\telegram-mini-app\\\\client\\\\src\\\\pages\\\\Business\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Business.scss';\n\n// Components\nimport BottomNav from '../../components/common/BottomNav';\nimport BusinessCard from '../../components/Business/BusinessCard';\nimport AvailableBusinessCard from '../../components/Business/AvailableBusinessCard';\nimport BusinessFilters from '../../components/Business/BusinessFilters';\nimport BusinessUpgradeModal from '../../components/Business/BusinessUpgradeModal';\nimport Button from '../../components/common/Button';\n\n// Types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BusinessPage = () => {\n  _s();\n  // Состояния для фильтрации и сортировки\n  const [activeTab, setActiveTab] = useState('owned');\n  const [businessType, setBusinessType] = useState('all');\n  const [sortBy, setSortBy] = useState('income');\n\n  // Модальное окно для улучшения\n  const [upgradeModal, setUpgradeModal] = useState({\n    visible: false\n  });\n\n  // Мок-данные баланса\n  const [balance, setBalance] = useState(1000);\n\n  // Мок-данные купленных бизнесов - теперь изначально пустой массив\n  const [ownedBusinesses, setOwnedBusinesses] = useState([]);\n\n  // Расширенный список доступных бизнесов\n  const [availableBusinesses, setAvailableBusinesses] = useState([{\n    id: '1',\n    name: 'Киоск',\n    type: 'legal',\n    description: 'Небольшой киоск с прессой и товарами первой необходимости. Минимальные вложения, низкий доход.',\n    initial_cost: 500,\n    initial_income: 20\n  }, {\n    id: '2',\n    name: 'Курьерская служба',\n    type: 'legal',\n    description: 'Доставка посылок и документов. Низкие вложения, стабильный доход.',\n    initial_cost: 1000,\n    initial_income: 30\n  }, {\n    id: '3',\n    name: 'Магазин',\n    type: 'legal',\n    description: 'Небольшой магазин с товарами первой необходимости. Стабильный средний доход.',\n    initial_cost: 2500,\n    initial_income: 150\n  }, {\n    id: '4',\n    name: 'Закусочная',\n    type: 'legal',\n    description: 'Закусочная с фаст-фудом. Высокая проходимость, хороший доход.',\n    initial_cost: 5000,\n    initial_income: 300\n  }, {\n    id: '5',\n    name: 'Мини-казино',\n    type: 'darknet',\n    description: 'Нелегальное мини-казино. Высокий доход, но риск полицейских рейдов.',\n    initial_cost: 7500,\n    initial_income: 600\n  }, {\n    id: '6',\n    name: 'Автосервис',\n    type: 'legal',\n    description: 'Ремонт и обслуживание автомобилей. Требует хороших вложений, но приносит стабильный доход.',\n    initial_cost: 10000,\n    initial_income: 750\n  }, {\n    id: '7',\n    name: 'Подпольный бар',\n    type: 'darknet',\n    description: 'Нелегальное заведение с продажей контрафактного алкоголя. Высокий доход, но высокий риск.',\n    initial_cost: 12000,\n    initial_income: 950\n  }, {\n    id: '8',\n    name: 'Ресторан',\n    type: 'legal',\n    description: 'Полноценный ресторан с кухней и обслуживанием. Высокие вложения, хороший доход.',\n    initial_cost: 20000,\n    initial_income: 1500\n  }, {\n    id: '9',\n    name: 'Точка сбыта наркотиков',\n    type: 'darknet',\n    description: 'Нелегальный бизнес по продаже запрещенных веществ. Очень высокий доход, очень высокий риск.',\n    initial_cost: 25000,\n    initial_income: 2500\n  }, {\n    id: '10',\n    name: 'Отель',\n    type: 'legal',\n    description: 'Гостиничный бизнес. Крупные вложения, высокий доход.',\n    initial_cost: 50000,\n    initial_income: 4000\n  }, {\n    id: '11',\n    name: 'Подпольная лаборатория',\n    type: 'darknet',\n    description: 'Производство запрещенных веществ. Огромный доход, но максимальный риск.',\n    initial_cost: 80000,\n    initial_income: 8000\n  }, {\n    id: '12',\n    name: 'Торговый центр',\n    type: 'legal',\n    description: 'Крупный торговый центр с множеством магазинов. Требует огромных вложений, но приносит стабильный высокий доход.',\n    initial_cost: 100000,\n    initial_income: 9000\n  }, {\n    id: '13',\n    name: 'IT-компания',\n    type: 'legal',\n    description: 'Разработка программного обеспечения и IT-поддержка. Требует квалифицированных кадров, но очень прибыльный бизнес.',\n    initial_cost: 40000,\n    initial_income: 3500\n  }, {\n    id: '14',\n    name: 'Фитнес-клуб',\n    type: 'legal',\n    description: 'Современный фитнес-центр с тренажерами и групповыми занятиями. Стабильный доход от абонементов.',\n    initial_cost: 35000,\n    initial_income: 2800\n  }, {\n    id: '15',\n    name: 'Сеть ломбардов',\n    type: 'legal',\n    description: 'Сеть пунктов приема ценностей под залог. Стабильный доход даже в кризисные времена.',\n    initial_cost: 30000,\n    initial_income: 2400\n  }, {\n    id: '16',\n    name: 'Подпольное казино',\n    type: 'darknet',\n    description: 'Элитный нелегальный игорный дом для состоятельных клиентов. Огромный доход, но высокий риск.',\n    initial_cost: 60000,\n    initial_income: 6000\n  }, {\n    id: '17',\n    name: 'Сеть аптек',\n    type: 'legal',\n    description: 'Розничная сеть аптек. Стабильный доход в любые времена.',\n    initial_cost: 45000,\n    initial_income: 3800\n  }, {\n    id: '18',\n    name: 'Подпольная типография',\n    type: 'darknet',\n    description: 'Нелегальное производство документов и денежных купюр. Очень высокий доход при значительном риске.',\n    initial_cost: 35000,\n    initial_income: 3600\n  }, {\n    id: '19',\n    name: 'Майнинг-ферма',\n    type: 'legal',\n    description: 'Центр для майнинга криптовалют. Требует существенных вложений в оборудование и электроэнергию.',\n    initial_cost: 70000,\n    initial_income: 6500\n  }, {\n    id: '20',\n    name: 'Нелегальная оружейная мастерская',\n    type: 'darknet',\n    description: 'Производство и продажа нелегального оружия. Колоссальный риск, но и соответствующий доход.',\n    initial_cost: 90000,\n    initial_income: 9500\n  }]);\n\n  // Фильтрация бизнесов по типу\n  const filteredOwnedBusinesses = ownedBusinesses.filter(business => businessType === 'all' ? true : business.type === businessType);\n  const filteredAvailableBusinesses = availableBusinesses.filter(business => businessType === 'all' ? true : business.type === businessType);\n\n  // Сортировка бизнесов\n  const sortedOwnedBusinesses = [...filteredOwnedBusinesses].sort((a, b) => {\n    if (sortBy === 'income') {\n      return b.income_per_hour - a.income_per_hour;\n    } else if (sortBy === 'cost') {\n      return a.upgrade_cost - b.upgrade_cost;\n    } else {\n      // efficiency\n      const efficiencyA = a.income_per_hour / a.cost;\n      const efficiencyB = b.income_per_hour / b.cost;\n      return efficiencyB - efficiencyA;\n    }\n  });\n  const sortedAvailableBusinesses = [...filteredAvailableBusinesses].sort((a, b) => {\n    if (sortBy === 'income') {\n      return b.initial_income - a.initial_income;\n    } else if (sortBy === 'cost') {\n      return a.initial_cost - b.initial_cost;\n    } else {\n      // efficiency\n      const efficiencyA = a.initial_income / a.initial_cost;\n      const efficiencyB = b.initial_income / b.initial_cost;\n      return efficiencyB - efficiencyA;\n    }\n  });\n\n  // Обработчики действий с бизнесами\n  const handleUpgradeBusiness = business => {\n    if (balance >= business.upgrade_cost) {\n      // Улучшаем бизнес\n      const updatedBusinesses = ownedBusinesses.map(b => {\n        if (b.business_id === business.business_id) {\n          return {\n            ...b,\n            level: b.level + 1,\n            income_per_hour: Math.round(b.income_per_hour * 1.2),\n            // +20% к доходу\n            upgrade_cost: Math.round(b.upgrade_cost * 1.5) // +50% к стоимости улучшения\n          };\n        }\n        return b;\n      });\n      setOwnedBusinesses(updatedBusinesses);\n      setBalance(prevBalance => prevBalance - business.upgrade_cost);\n      setUpgradeModal({\n        visible: false\n      });\n    }\n  };\n  const handleBuyBusiness = business => {\n    if (balance >= business.initial_cost) {\n      // Покупаем бизнес\n      const newBusiness = {\n        business_id: business.id,\n        owner_id: 'user1',\n        name: business.name,\n        type: business.type,\n        level: 1,\n        income_per_hour: business.initial_income,\n        cost: business.initial_cost,\n        upgrade_cost: Math.round(business.initial_cost * 0.6),\n        // 60% от начальной стоимости\n        purchased_at: new Date()\n      };\n      setOwnedBusinesses([...ownedBusinesses, newBusiness]);\n      setAvailableBusinesses(availableBusinesses.filter(b => b.id !== business.id));\n      setBalance(prevBalance => prevBalance - business.initial_cost);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"business-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"business-page__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0411\\u0438\\u0437\\u043D\\u0435\\u0441\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"business-page__balance\",\n        children: [\"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: balance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BusinessFilters, {\n      activeTab: activeTab,\n      businessType: businessType,\n      sortBy: sortBy,\n      onChangeTab: setActiveTab,\n      onChangeType: setBusinessType,\n      onChangeSortBy: setSortBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"business-page__content\",\n      children: activeTab === 'owned' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: sortedOwnedBusinesses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"business-page__list\",\n          children: sortedOwnedBusinesses.map(business => /*#__PURE__*/_jsxDEV(BusinessCard, {\n            business: business,\n            onClick: () => setUpgradeModal({\n              visible: true,\n              business\n            })\n          }, business.business_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"business-page__empty\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"accent\",\n            onClick: () => setActiveTab('available'),\n            children: \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"business-page__list\",\n          children: sortedAvailableBusinesses.map(business => /*#__PURE__*/_jsxDEV(AvailableBusinessCard, {\n            business: business,\n            onBuy: handleBuyBusiness,\n            canAfford: balance >= business.initial_cost\n          }, business.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), sortedAvailableBusinesses.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"business-page__empty\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u043E\\u0432 \\u0434\\u043B\\u044F \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), upgradeModal.visible && upgradeModal.business && /*#__PURE__*/_jsxDEV(BusinessUpgradeModal, {\n      business: upgradeModal.business,\n      onUpgrade: handleUpgradeBusiness,\n      onClose: () => setUpgradeModal({\n        visible: false\n      }),\n      canAfford: balance >= upgradeModal.business.upgrade_cost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BottomNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n};\n_s(BusinessPage, \"YQmdSQySbs4OqoaTwGz0tNOimOA=\");\n_c = BusinessPage;\nexport default BusinessPage;\nvar _c;\n$RefreshReg$(_c, \"BusinessPage\");","map":{"version":3,"names":["React","useState","BottomNav","BusinessCard","AvailableBusinessCard","BusinessFilters","BusinessUpgradeModal","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BusinessPage","_s","activeTab","setActiveTab","businessType","setBusinessType","sortBy","setSortBy","upgradeModal","setUpgradeModal","visible","balance","setBalance","ownedBusinesses","setOwnedBusinesses","availableBusinesses","setAvailableBusinesses","id","name","type","description","initial_cost","initial_income","filteredOwnedBusinesses","filter","business","filteredAvailableBusinesses","sortedOwnedBusinesses","sort","a","b","income_per_hour","upgrade_cost","efficiencyA","cost","efficiencyB","sortedAvailableBusinesses","handleUpgradeBusiness","updatedBusinesses","map","business_id","level","Math","round","prevBalance","handleBuyBusiness","newBusiness","owner_id","purchased_at","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangeTab","onChangeType","onChangeSortBy","length","onClick","variant","onBuy","canAfford","onUpgrade","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Reko/Desktop/chtoto/telegram-mini-app/client/src/pages/Business/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Business.scss';\r\n\r\n// Components\r\nimport BottomNav from '../../components/common/BottomNav';\r\nimport BusinessCard from '../../components/Business/BusinessCard';\r\nimport AvailableBusinessCard from '../../components/Business/AvailableBusinessCard';\r\nimport BusinessFilters from '../../components/Business/BusinessFilters';\r\nimport BusinessUpgradeModal from '../../components/Business/BusinessUpgradeModal';\r\nimport Button from '../../components/common/Button';\r\n\r\n// Types\r\nimport { Business, AvailableBusiness, BusinessType } from '../../types/business';\r\n\r\nconst BusinessPage: React.FC = () => {\r\n  // Состояния для фильтрации и сортировки\r\n  const [activeTab, setActiveTab] = useState<'owned' | 'available'>('owned');\r\n  const [businessType, setBusinessType] = useState<BusinessType | 'all'>('all');\r\n  const [sortBy, setSortBy] = useState<'income' | 'cost' | 'efficiency'>('income');\r\n  \r\n  // Модальное окно для улучшения\r\n  const [upgradeModal, setUpgradeModal] = useState<{ visible: boolean, business?: Business }>({\r\n    visible: false\r\n  });\r\n  \r\n  // Мок-данные баланса\r\n  const [balance, setBalance] = useState(1000);\r\n  \r\n  // Мок-данные купленных бизнесов - теперь изначально пустой массив\r\n  const [ownedBusinesses, setOwnedBusinesses] = useState<Business[]>([]);\r\n  \r\n  // Расширенный список доступных бизнесов\r\n  const [availableBusinesses, setAvailableBusinesses] = useState<AvailableBusiness[]>([\r\n    {\r\n      id: '1',\r\n      name: 'Киоск',\r\n      type: 'legal',\r\n      description: 'Небольшой киоск с прессой и товарами первой необходимости. Минимальные вложения, низкий доход.',\r\n      initial_cost: 500,\r\n      initial_income: 20,\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Курьерская служба',\r\n      type: 'legal',\r\n      description: 'Доставка посылок и документов. Низкие вложения, стабильный доход.',\r\n      initial_cost: 1000,\r\n      initial_income: 30,\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Магазин',\r\n      type: 'legal',\r\n      description: 'Небольшой магазин с товарами первой необходимости. Стабильный средний доход.',\r\n      initial_cost: 2500,\r\n      initial_income: 150,\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Закусочная',\r\n      type: 'legal',\r\n      description: 'Закусочная с фаст-фудом. Высокая проходимость, хороший доход.',\r\n      initial_cost: 5000,\r\n      initial_income: 300,\r\n    },\r\n    {\r\n      id: '5',\r\n      name: 'Мини-казино',\r\n      type: 'darknet',\r\n      description: 'Нелегальное мини-казино. Высокий доход, но риск полицейских рейдов.',\r\n      initial_cost: 7500,\r\n      initial_income: 600,\r\n    },\r\n    {\r\n      id: '6',\r\n      name: 'Автосервис',\r\n      type: 'legal',\r\n      description: 'Ремонт и обслуживание автомобилей. Требует хороших вложений, но приносит стабильный доход.',\r\n      initial_cost: 10000,\r\n      initial_income: 750,\r\n    },\r\n    {\r\n      id: '7',\r\n      name: 'Подпольный бар',\r\n      type: 'darknet',\r\n      description: 'Нелегальное заведение с продажей контрафактного алкоголя. Высокий доход, но высокий риск.',\r\n      initial_cost: 12000,\r\n      initial_income: 950,\r\n    },\r\n    {\r\n      id: '8',\r\n      name: 'Ресторан',\r\n      type: 'legal',\r\n      description: 'Полноценный ресторан с кухней и обслуживанием. Высокие вложения, хороший доход.',\r\n      initial_cost: 20000,\r\n      initial_income: 1500,\r\n    },\r\n    {\r\n      id: '9',\r\n      name: 'Точка сбыта наркотиков',\r\n      type: 'darknet',\r\n      description: 'Нелегальный бизнес по продаже запрещенных веществ. Очень высокий доход, очень высокий риск.',\r\n      initial_cost: 25000,\r\n      initial_income: 2500,\r\n    },\r\n    {\r\n      id: '10',\r\n      name: 'Отель',\r\n      type: 'legal',\r\n      description: 'Гостиничный бизнес. Крупные вложения, высокий доход.',\r\n      initial_cost: 50000,\r\n      initial_income: 4000,\r\n    },\r\n    {\r\n      id: '11',\r\n      name: 'Подпольная лаборатория',\r\n      type: 'darknet',\r\n      description: 'Производство запрещенных веществ. Огромный доход, но максимальный риск.',\r\n      initial_cost: 80000,\r\n      initial_income: 8000,\r\n    },\r\n    {\r\n      id: '12',\r\n      name: 'Торговый центр',\r\n      type: 'legal',\r\n      description: 'Крупный торговый центр с множеством магазинов. Требует огромных вложений, но приносит стабильный высокий доход.',\r\n      initial_cost: 100000,\r\n      initial_income: 9000,\r\n    },\r\n    {\r\n      id: '13',\r\n      name: 'IT-компания',\r\n      type: 'legal',\r\n      description: 'Разработка программного обеспечения и IT-поддержка. Требует квалифицированных кадров, но очень прибыльный бизнес.',\r\n      initial_cost: 40000,\r\n      initial_income: 3500,\r\n    },\r\n    {\r\n      id: '14',\r\n      name: 'Фитнес-клуб',\r\n      type: 'legal',\r\n      description: 'Современный фитнес-центр с тренажерами и групповыми занятиями. Стабильный доход от абонементов.',\r\n      initial_cost: 35000,\r\n      initial_income: 2800,\r\n    },\r\n    {\r\n      id: '15',\r\n      name: 'Сеть ломбардов',\r\n      type: 'legal',\r\n      description: 'Сеть пунктов приема ценностей под залог. Стабильный доход даже в кризисные времена.',\r\n      initial_cost: 30000,\r\n      initial_income: 2400,\r\n    },\r\n    {\r\n      id: '16',\r\n      name: 'Подпольное казино',\r\n      type: 'darknet',\r\n      description: 'Элитный нелегальный игорный дом для состоятельных клиентов. Огромный доход, но высокий риск.',\r\n      initial_cost: 60000,\r\n      initial_income: 6000,\r\n    },\r\n    {\r\n      id: '17',\r\n      name: 'Сеть аптек',\r\n      type: 'legal',\r\n      description: 'Розничная сеть аптек. Стабильный доход в любые времена.',\r\n      initial_cost: 45000,\r\n      initial_income: 3800,\r\n    },\r\n    {\r\n      id: '18',\r\n      name: 'Подпольная типография',\r\n      type: 'darknet',\r\n      description: 'Нелегальное производство документов и денежных купюр. Очень высокий доход при значительном риске.',\r\n      initial_cost: 35000,\r\n      initial_income: 3600,\r\n    },\r\n    {\r\n      id: '19',\r\n      name: 'Майнинг-ферма',\r\n      type: 'legal',\r\n      description: 'Центр для майнинга криптовалют. Требует существенных вложений в оборудование и электроэнергию.',\r\n      initial_cost: 70000,\r\n      initial_income: 6500,\r\n    },\r\n    {\r\n      id: '20',\r\n      name: 'Нелегальная оружейная мастерская',\r\n      type: 'darknet',\r\n      description: 'Производство и продажа нелегального оружия. Колоссальный риск, но и соответствующий доход.',\r\n      initial_cost: 90000,\r\n      initial_income: 9500,\r\n    }\r\n  ]);\r\n  \r\n  // Фильтрация бизнесов по типу\r\n  const filteredOwnedBusinesses = ownedBusinesses.filter(business => \r\n    businessType === 'all' ? true : business.type === businessType\r\n  );\r\n  \r\n  const filteredAvailableBusinesses = availableBusinesses.filter(business => \r\n    businessType === 'all' ? true : business.type === businessType\r\n  );\r\n  \r\n  // Сортировка бизнесов\r\n  const sortedOwnedBusinesses = [...filteredOwnedBusinesses].sort((a, b) => {\r\n    if (sortBy === 'income') {\r\n      return b.income_per_hour - a.income_per_hour;\r\n    } else if (sortBy === 'cost') {\r\n      return a.upgrade_cost - b.upgrade_cost;\r\n    } else { // efficiency\r\n      const efficiencyA = a.income_per_hour / a.cost;\r\n      const efficiencyB = b.income_per_hour / b.cost;\r\n      return efficiencyB - efficiencyA;\r\n    }\r\n  });\r\n  \r\n  const sortedAvailableBusinesses = [...filteredAvailableBusinesses].sort((a, b) => {\r\n    if (sortBy === 'income') {\r\n      return b.initial_income - a.initial_income;\r\n    } else if (sortBy === 'cost') {\r\n      return a.initial_cost - b.initial_cost;\r\n    } else { // efficiency\r\n      const efficiencyA = a.initial_income / a.initial_cost;\r\n      const efficiencyB = b.initial_income / b.initial_cost;\r\n      return efficiencyB - efficiencyA;\r\n    }\r\n  });\r\n  \r\n  // Обработчики действий с бизнесами\r\n  const handleUpgradeBusiness = (business: Business) => {\r\n    if (balance >= business.upgrade_cost) {\r\n      // Улучшаем бизнес\r\n      const updatedBusinesses = ownedBusinesses.map(b => {\r\n        if (b.business_id === business.business_id) {\r\n          return {\r\n            ...b,\r\n            level: b.level + 1,\r\n            income_per_hour: Math.round(b.income_per_hour * 1.2), // +20% к доходу\r\n            upgrade_cost: Math.round(b.upgrade_cost * 1.5) // +50% к стоимости улучшения\r\n          };\r\n        }\r\n        return b;\r\n      });\r\n      \r\n      setOwnedBusinesses(updatedBusinesses);\r\n      setBalance(prevBalance => prevBalance - business.upgrade_cost);\r\n      setUpgradeModal({ visible: false });\r\n    }\r\n  };\r\n  \r\n  const handleBuyBusiness = (business: AvailableBusiness) => {\r\n    if (balance >= business.initial_cost) {\r\n      // Покупаем бизнес\r\n      const newBusiness: Business = {\r\n        business_id: business.id,\r\n        owner_id: 'user1',\r\n        name: business.name,\r\n        type: business.type,\r\n        level: 1,\r\n        income_per_hour: business.initial_income,\r\n        cost: business.initial_cost,\r\n        upgrade_cost: Math.round(business.initial_cost * 0.6), // 60% от начальной стоимости\r\n        purchased_at: new Date()\r\n      };\r\n      \r\n      setOwnedBusinesses([...ownedBusinesses, newBusiness]);\r\n      setAvailableBusinesses(availableBusinesses.filter(b => b.id !== business.id));\r\n      setBalance(prevBalance => prevBalance - business.initial_cost);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"business-page\">\r\n      <div className=\"business-page__header\">\r\n        <h1>Бизнесы</h1>\r\n        <div className=\"business-page__balance\">\r\n          Баланс: <span>{balance}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <BusinessFilters \r\n        activeTab={activeTab}\r\n        businessType={businessType}\r\n        sortBy={sortBy}\r\n        onChangeTab={setActiveTab}\r\n        onChangeType={setBusinessType}\r\n        onChangeSortBy={setSortBy}\r\n      />\r\n      \r\n      <div className=\"business-page__content\">\r\n        {activeTab === 'owned' ? (\r\n          <>\r\n            {sortedOwnedBusinesses.length > 0 ? (\r\n              <div className=\"business-page__list\">\r\n                {sortedOwnedBusinesses.map(business => (\r\n                  <BusinessCard \r\n                    key={business.business_id} \r\n                    business={business} \r\n                    onClick={() => setUpgradeModal({ visible: true, business })}\r\n                  />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"business-page__empty\">\r\n                <p>У вас пока нет бизнесов</p>\r\n                <Button \r\n                  variant=\"accent\" \r\n                  onClick={() => setActiveTab('available')}\r\n                >\r\n                  Просмотреть доступные бизнесы\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"business-page__list\">\r\n              {sortedAvailableBusinesses.map(business => (\r\n                <AvailableBusinessCard \r\n                  key={business.id} \r\n                  business={business} \r\n                  onBuy={handleBuyBusiness}\r\n                  canAfford={balance >= business.initial_cost}\r\n                />\r\n              ))}\r\n            </div>\r\n            \r\n            {sortedAvailableBusinesses.length === 0 && (\r\n              <div className=\"business-page__empty\">\r\n                <p>Нет доступных бизнесов для покупки</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      \r\n      {upgradeModal.visible && upgradeModal.business && (\r\n        <BusinessUpgradeModal \r\n          business={upgradeModal.business}\r\n          onUpgrade={handleUpgradeBusiness}\r\n          onClose={() => setUpgradeModal({ visible: false })}\r\n          canAfford={balance >= upgradeModal.business.upgrade_cost}\r\n        />\r\n      )}\r\n      \r\n      <BottomNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}